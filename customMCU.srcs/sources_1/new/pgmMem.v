`timescale 1ns / 1ps
module pgmMem(
    input reset,
    input [7:0] addr,
    output [15:0] dataOut
    );
    
    reg [15:0] mem [255:0];
    always @(negedge reset)
    begin
        
        //test 1
        mem[0] = 16'b0001_0001_0000_0101;   //ldb
        mem[1] = 16'b0000_0001_0000_0010;   //lda
        mem[2] = 16'b0100_0000_1000_0000;   //jmp
        mem[3] = 16'b0010_0000_0000_1000; //sta
        
        mem[128] = 16'b0111_0001_0000_1000; //add
        mem[129] = 16'b0010_0000_0000_1000; //sta
        mem[130] = 16'b0001_0000_0000_1000; //ldb
        mem[131] = 16'b0111_0101_0000_0000; //cmb
        mem[132] = 16'b0011_0000_0000_1000; //stb
        mem[133] = 16'b0000_0000_0000_1000; //lda
        mem[134] = 16'b0111_0001_0000_1000; //add
        mem[135] = 16'b0100_0000_0000_0011; //jmp
        mem[136] = 16'b0111_0011_0000_0000; //cla
        mem[137] = 16'b0111_0100_0000_0000; //clb
  
        
        /*
        mem[0] = 16'b0000_0001_0000_0010;   //lda
        mem[1] = 16'b0001_0001_0000_0110;   //ldb  
        mem[2] = 16'b0111_0111_0000_0000;   //decb
        mem[3] = 16'b1111_0101_0000_0110;   //lso
        mem[4] = 16'b0111_1101_0000_0000;   //sz
        mem[5] = 16'b0100_0000_0000_0010;   //jmp
        mem[6] = 16'b0010_0000_0000_0001;   //sta
        
        mem[7] = 16'b0000_0001_0000_0111;   //lda
        mem[8] = 16'b0001_0001_0000_0100;   //ldb
        mem[9] = 16'b1111_0011_0000_0110;   //lsb
        mem[10] = 16'b0001_0000_0000_0001;  //ldb
        
        mem[11] = 16'b0111_0001_0000_0000;   //add
        mem[12] = 16'b0001_0001_0000_0011;  //ldb
        mem[13] = 16'b1111_0100_0000_0000;  //rsb
        /*
        //test 2
        mem[0] = 16'b0001_0001_0000_0011;   //ldb
        mem[1] = 16'b0111_0001_0000_0000;   //add
        mem[2] = 16'b0111_0111_0000_0000;   //decb
        mem[3] = 16'b0111_0001_0000_0000;   //add
        mem[4] = 16'b0111_1101_0000_0000;   //sz
       mem[5] = 16'b0100_0000_0000_0010;    //jmp
        mem[6] = 16'b1111_1111_1111_1111;   
        mem[7] = 16'b1111_1111_1111_1111;     
        
        //test 3
        mem[0] = 16'b0111_1010_0000_0000;    //ion
        mem[1] = 16'b0111_0001_0000_0100;    //lda
        mem[2] = 16'b1100_0000_0000_0000;    //popa
        mem[8'b1000_0000] = 16'b0001_0000_0000_0000;   //lda
        mem[8'b1000_0001] = 16'b0111_0000_0000_0000;   //ldb
        mem[8'b1000_0010] = 16'b0111_0001_0000_0000;   //add
        mem[8'b1000_0011] = 16'b0111_0100_0000_0000;   //cb
        mem[8'b1000_0100] = 16'b1110_0000_0000_0000;   //ret
         */
    end
    
    assign dataOut = mem[addr];
endmodule
